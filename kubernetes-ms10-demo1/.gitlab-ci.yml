variables:
  DOCKER_HOST: tcp://$DOCKER_HOST/

stages:
  - build
  - dockerize
  - deploy

build:
  stage: build
  image: gradle:jdk11-alpine
  script:
    - gradle build -x test
  artifacts:
    paths:
      - build/libs/*.jar
  only: 
    - master
      
dockerize:
  stage: dockerize
  image: docker:dind
  script:
    - cp /builds/$CI_PROJECT_PATH/build/libs/*.jar ./
    - docker build -t $CI_REGISTRY_USER/mstendemo:$CI_PIPELINE_ID .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker push $CI_REGISTRY_USER/mstendemo:$CI_PIPELINE_ID
  only: 
    - master

deploy:
  stage: deploy
  image: docker:dind
  script:
    - apk update
    - apk add git
    - 'which ssh-agent || ( apk add openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh $KUBEMASTER cd $DFPATH && git pull
    - ssh $KUBEMASTER kubectl apply -f $DFPATH/deployment.yaml
    - ssh $KUBEMASTER kubectl set image deployment/ms10-demo1 -n msten-demo ms10-demo1-container=$CI_REGISTRY_USER/mstendemo:$CI_PIPELINE_ID
  only: 
    - master
